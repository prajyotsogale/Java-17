A method declares executable code that can be invoked, passing a fix
number of values as arguments

the method

public static void methodName(){
	//method statement
}

above method but takes no data in, and returns no data from the method
(which is what means the special word means in this declaration)


arguments are the values that we used to pass to the method


public static int calculateMyAge(int dateOfBirth){
	return (2023 - dateOfBirth);

	//This method will return an integer when it finishes executing successfully
}



Method = A method declares executable code that can be invoked, passing a fix
		 number of values as arguments.

Some programming languages call method with a return value, a functio
And method with void, a procedure

we can use return statement in void to terminate the condition

Method Signature = combination of method name and its parameters(parameter list)

You can have multiple method with same method name, as long as the method signature 
(meaning the parameters) are different.




when you convert 3.9999 into int, it will give 3;





method overloading occurs when a class has multiple methods, with the same name, 
but the methods are declared with different parameters.

the type, order, and numbers of parameters, in conjuction with the name, make a 
method signature unique.


for the value of pi
Math.PI = 3.14159 ...




-----------------------------------------New-------------------------------------------


Traditional Switch statement

switch(value){
	case 1:
		//code
		break;
	case 2: case 3: case 4:
		//code
		break;
	case 5:
		//code
		break;
	default:
		//code
}



for loop - the for is more complex to setup but is commonly used when you are iterating
			over a set of values.
while -  the while loop is used until a specified condition becomes false
do while - the do while always executes at least one and continues until a specified 
			condition becomes false




for syntax

for(init;expression;increment){
	//code
}

- The initialization section declares or sets state, usually declaring
  and initializing a loop variable, before the loop begins processing.
- The expression section, once it becomes false, will end the loop processing.
- The increment section is executed after the expression is tested, and is generally 
  the place where the loop variable is incremented.




Prime number


return (wholeNumber==2);   //this will return true if the number is true, else false

endless int loop to the Max.value and the go to negative















while loop - continue executing the loop until the condition becomes false;
use it when you dont know the how many times you wanna loop

do while - execute the loop atlest once;

declare the variable outside the loop unlike for loop




-------------Continue Statement------------
will stop executing the current iteration of a block of a loop and start a new iteration.





The last digit is truncated if we divide by int 
123/10 == 12  and so on





------------------------------------------local variable-----------------------------------

a local variable is called local because it is available for use by the block in which it is declared

scope describes the accessibility of a variable 
in scope - the variable can be used by the an executing block or any nested blocks
out of scope -  means the variable is no longer available


switch statement is different from the if then else block 
a variable can be declared inside a case and can be accessible after the case is been executed 
inside the switch statement(only inside it)


a class can be described as :
	a custom data type 
	a special code block that contains methods

a class is like a empty form that gets copied and handed out
an object is called instance of a particular class

we called creation of a object instantiation or instantiating a class


the most common way to create an object is to use new keyword
the new keyword created an instance and you can sometimes pass data when creating an instance to setup data on that object
the string is special because we can create a string just by using literal 































